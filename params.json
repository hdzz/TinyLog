{"name":"Tinylog","tagline":"A header-only C++ library for basic logging!","body":"### Welcome to TinyLog HomePage.\r\n\r\nTinyLog is a header-only C++ library for basic logging. If you have the following feelings like me, then TinyLog may be your choice:\r\n+ don't want to use \"cout\" for logging info in Console.\r\n+ don't want to use a splendid large logging library which can do all kinds of things that you don't need.\r\n+ just want a tiny logging tool having different logging level, can be easily turned on/off or redirected to a file.\r\n\r\n\r\n### Basic use case (There is no complex use case because I'm Tiny!)\r\n\r\n``` c++\r\n#include \"TinyLog.h\"\r\n#include <iomanip>\r\n\r\ntl::TinyLog debug(tl::TinyLog::DEBUG);\r\ntl::TinyLog warn(tl::TinyLog::WARNING);\r\ntl::TinyLog err(tl::TinyLog::ERROR);\r\n\r\nint main()\r\n{\r\n    debug << \"This is a debug info.\\n\";\r\n    //Set global log level to WARNING\r\n    tl::TinyLog::GlobalLogLevel(tl::TinyLog::WARNING);\r\n    debug <<\"You cannot see me! I'm not a warning!\\n\";\r\n    warn <<\"I'm a warning! How are you?\"<<std::endl;\r\n    err <<std::setfill('-')\r\n        <<std::setw(80)\r\n        <<std::left\r\n        <<\"Don't miss me, I'm an error!\";\r\n    \r\n    //Log to file\r\n    ofstream logfile(\"log.txt\");\r\n    tl::TinyLog filelog(tl::TinyLog::INFO, &logfile);\r\n    filelog<<\"This msg goes to file!\"<<endl;\r\n    return 0;\r\n}\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}